{"version":3,"sources":["views/ArduinoRegister.jsx","views/SelectStudentRedes.jsx","App.js","index.js"],"names":["props","search","useLocation","id","queryString","parse","useState","arduinoId","setArduinoId","student","setStudent","group","setGroup","sent","setSent","className","onSubmit","e","preventDefault","data","today","Date","date","getFullYear","getMonth","getDate","Airtable","apiKey","process","base","create","err","records","console","error","value","onChange","target","name","type","placeholder","readOnly","required","role","students","randomStudent","Math","floor","random","length","class","style","App","path","component","SelectStudentRedes","ArduinoRegister","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b3fd708.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport { useLocation } from \"react-router\";\nimport queryString from \"query-string\";\nimport Airtable from \"airtable\";\n\n\nexport default (props) => {\n    const { search } = useLocation();\n    const { id } = queryString.parse(search);\n\n    const [arduinoId, setArduinoId ] = useState(id);\n    const [student, setStudent ] = useState(\"\");\n    const [group, setGroup ] = useState(\"\");\n    const [sent, setSent ] = useState(\"\");\n\n    const API_KEY = process.env.REACT_APP_AIRTABLE_API_KEY;\n    const AT_BASE = process.env.REACT_APP_AIRTABLE_BASE;\n\n    const handleSubmit = (e) => {\n        setSent(true)\n        e.preventDefault();\n        const data = { arduinoId, student, group };\n        const today = new Date();\n        data.date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n        var base = new Airtable({apiKey: API_KEY}).base(AT_BASE);\n\n        base('Table 1').create([\n          {\n            \"fields\": data\n          }\n        ], function(err, records) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n        });\n    }\n  \n  return(\n    <>\n        {id && <div className=\"container col-xl-10 col-xxl-8 px-4 py-5\">\n        <div className=\"row align-items-center g-lg-5 py-5\">\n          <div className=\"col-lg-7 text-center text-lg-start\">\n            <h1 className=\"display-4 fw-bold lh-1 mb-3 text-white\">Registro de Arduino</h1>\n            <p className=\"col-lg-10 fs-4\">Por favor, registra el Arduino que utilizar√°s hoy para realizar la/-s pr√°ctica/-s.</p>\n          </div>\n          <div className=\"col-md-10 mx-auto col-lg-5\">\n            <form id=\"registerForm\" className=\"needs-validation p-4 p-md-5 border rounded-3 bg-dark\" onSubmit={handleSubmit}>\n                <div className=\"form-floating mb-3\">\n                    <input value={arduinoId} onChange={(e) => setArduinoId(e.target.value)} className=\"form-control\" name=\"arduinoId\" id=\"arduinoId\" type=\"text\" placeholder=\"Readonly input here‚Ä¶\" readOnly></input>\n                    <label id=\"arduinoId\">Arduino</label>\n                </div>\n                <div className=\"form-floating mb-3\">\n                    <input type=\"text\" value={student} onChange={(e) => setStudent(e.target.value)} className=\"form-control\" id=\"nameAndSurname\" name=\"nameAndSurname\" placeholder=\"Luis Juarros\" required></input>\n                    <label>Nombre y Apellidos</label>\n                </div>\n\n                \n              \n                <div className=\"form-floating mb-3 text-start\">\n                    <div className=\"custom-control custom-radio custom-control-inline\">\n                        <input type=\"radio\" name=\"group\" className=\"custom-control-input\" onChange={(e) => setGroup(\"RoboticaI\")} required></input>\n                        <label className=\"custom-control-label\">Rob√≥tica I</label>\n                    </div>\n                    <div className=\"custom-control custom-radio custom-control-inline\">\n                        <input type=\"radio\" name=\"group\" className=\"custom-control-input\" onChange={(e) => setGroup(\"RoboticaII\")}></input>\n                        <label className=\"custom-control-label\">Rob√≥tica II</label>\n                    </div>\n                </div>\n\n              <button id=\"registerButton\" className=\"w-100 btn btn-lg btn-warning\" type=\"submit\" >Registrar</button>\n            </form>\n          </div>\n          <hr className=\"my-4\"></hr>\n              <small className=\"text-muted\">Happy Coding üëæ</small>\n        </div>\n    </div>\n      }\n      {!id && <div>¬øQu√© buscas aqu√≠ peque√±o hacker?<br/>Aqu√≠ no hay nada que te pueda interesar<br/>üíÄ üíÄ üíÄ</div>}\n      {id && sent && <div className=\"alert alert-dark\" role=\"alert\">Arduino registrado üëç</div>}\n        \n\n    </>\n  )\n}","import React from \"react\";\n\n\n\nexport default (props) => {\n\n  const students = [\"Alejandro\"\n    ,\"Carlos\"\n    ,\"C√©sar\"\n    ,\"Daniel\"\n    ,\"Gonzalo\"\n    ,\"Iv√°n\"\n    ,\"Javier\"\n    ,\"Jorge Manzano\"\n    ,\"Jorge Villag√≥mez\"\n    ,\"Laura\"\n    ,\"Marcos\"\n    ,\"Nayas\"\n    ,\"Pablo Aguirre\"\n    ,\"Pablo Alf√©rez\"\n    ,\"Pablo Cavero\"\n    ,\"Enmanuel\"\n    ,\"Rodrigo\"\n    ,\"Sergio Pic√≥n\"\n    ,\"Sergio Prados\"\n    ,\"Zigor\"]\n\n  const randomStudent = students[Math.floor(Math.random()*students.length)];\n  \n\n  \n  return(\n    <>\n        <div class=\"jumbotron\" style={{\"minHeight\": \"100vh\", \"display\": \"flex\", \"alignItems\": \"center\"}}>\n          <div class=\"container\">\n            <h1 style={{\"fontSize\":\"100px\"}}>{randomStudent}</h1>\n          </div>\n        </div>\n\n\n    </>\n  )\n}","import ArduinoRegister from './views/ArduinoRegister';\nimport SelectStudentRedes from './views/SelectStudentRedes';\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/select-student-redes\" component={() => <SelectStudentRedes />} />\n        <Route path=\"/\" component={() => <ArduinoRegister />} />\n      </Switch>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}